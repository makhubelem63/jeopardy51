{"version":3,"sources":["fonts/korinna.ttf","fonts/Swiss921-BT_43276.ttf","GameLoader.js","PlayerChooser.js","JeopardyBoard.js","Scoreboard.js","FinalJeopardy.js","App.js","index.js"],"names":["module","exports","GameLoader","gameLoadedHandler","event","target","files","text","then","data","JSON","parse","undefined","game","console","log","validateGame","props","updateGame","downloadSampleGame","element","document","createElement","file","Blob","stringify","sample_game","type","href","URL","createObjectURL","download","body","appendChild","click","className","name","onChange","this","onClick","React","Component","PlayerChooser","addPlayer","state","input","setState","handlePlayGame","playGame","handleKeyPress","key","inputHandler","value","players","map","player","i","onKeyPress","autoFocus","placeholder","JeopardyBoard","clueKeyPress","board","categoriesShown","currentCategory","currentClue","length","categoryShown","clue","clues","dailyDouble","dailyDoubleScreenPresented","switchDDToClue","toggleSolution","backToBoard","renderNextCategory","solution","addEventListener","removeEventListener","renderCategory","renderClue","category","_","j","chosen","chooseClue","categoryName","showDailyDoubleScreen","html","dangerouslySetInnerHTML","__html","index","TransitionGroup","CSSTransition","timeout","classNames","Scoreboard","changeWager","wager","wagers","updateScore","clueValue","correct","renderPlayer","currentValue","wagering","scoreString","score","parseInt","stats","incorrect","FinalJeopardy","showClue","finishGame","final","ReactGA","initialize","gaOptions","siteSpeedSampleRate","pageview","window","location","pathname","search","App","action","label","round","Object","assign","downloadGame","playing","proceedToDouble","proceedToFinal","categories","single","c","concat","double","join","slice","allowProceedToDouble","forEach","allowProceedToFinal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b0bd23d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/korinna.64dc7745.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Swiss921-BT_43276.6433bfa5.ttf\";","import React from 'react';\nimport './GameLoader.css';\nimport sample_game from './assets/sample_game.json';\n\nfunction validateGame(data) {\n  const game = data.game;\n  if (game === undefined) {\n    console.log('Game key not found in JSON payload.');\n    return false;\n  }\n  // TODO: additional validation\n  return true;\n}\n\nclass GameLoader extends React.Component {\n  render() {\n    return (\n      <div className=\"game-loader\">\n        <h1>Jeopardy Player</h1>\n        <p>Designed by Brian Yu</p>\n        <hr/>\n        <h2>Play a Game</h2>\n        <input type=\"file\" name=\"file\" onChange={this.gameLoadedHandler}/>\n        <hr/>\n        <h2>Create a Game</h2>\n        <div className=\"create-your-own\">\n          To create a Jeopardy game, download the below game configuration file,\n          edit it to include your desired clues, and re-upload it here.\n          <div>\n            <button onClick={this.downloadSampleGame}>Download Configuration</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  gameLoadedHandler = (event) => {\n    event.target.files[0].text()\n         .then(text => {\n            const data = JSON.parse(text);\n            if (validateGame(data)) {\n              this.props.updateGame(data);\n            } else {\n              console.log(\"Invalid game.\");\n            }\n         });\n  }\n\n  downloadSampleGame = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify(sample_game, null, 4)], {type: \"text/plain\"});\n    element.href = URL.createObjectURL(file);\n    element.download = \"sample_game.json\";\n    document.body.appendChild(element);\n    element.click();\n  }\n}\n\nexport default GameLoader;","import React from 'react';\nimport './PlayerChooser.css';\n\nclass PlayerChooser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ''\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"player-chooser\">\n        <div>\n          <h1>Players</h1>\n          <ul>\n            {this.props.players.map((player, i) => <li key={i}>{player.name}</li>)}\n          </ul>\n        </div>\n        <div>\n          <input value={this.state.input} onKeyPress={this.handleKeyPress} onChange={this.inputHandler} autoFocus type=\"text\" placeholder=\"Player Name\" />\n          <button className=\"add-player-button\" onClick={this.addPlayer}>Add Player</button>\n        </div>\n        <div>\n          <button className=\"play-game-button\" onClick={this.handlePlayGame}>Play Game</button>\n        </div>\n      </div>\n    );\n  }\n\n  addPlayer = () => {\n    this.props.addPlayer(this.state.input);\n    this.setState({\n      input: ''\n    });\n  }\n\n  handlePlayGame = (event) => {\n    this.props.playGame()\n  }\n\n  handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      this.addPlayer();\n    }\n  }\n\n  inputHandler = (event) => {\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n}\n\nexport default PlayerChooser;","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './JeopardyBoard.css';\n\n\nclass JeopardyBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      solution: false,\n      dailyDoubleScreenPresented: false\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.clueKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.clueKeyPress);\n  }\n\n  render() {\n    const { board, categoriesShown, currentCategory, currentClue } = this.props;\n\n    // First check for if we need to present categories\n    if (categoriesShown < board.length) {\n      return this.renderCategory(categoriesShown);\n    }\n\n    // Check if there is a clue to present\n    if (currentCategory !== null && currentClue !== null) {\n      return this.renderClue(\n        board[currentCategory].category,\n        board[currentCategory].clues[currentClue],\n        board[currentCategory].clues[currentClue].value\n      ); \n    }\n\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              {board.map((category, i) => (\n                <td key={i} className=\"category-title\">\n                  {category.category}\n                </td>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {board[0].clues.map((_, j) => {\n              return (\n                <tr key={j}>\n                  {board.map((category, i) => {\n                    if (category.clues[j].chosen) {\n                      return (\n                        <td key={i} className=\"board-clue\"></td>\n                      );\n                    }\n                    return (\n                      <td\n                        key={i}\n                        onClick={() => this.props.chooseClue(i, j)}\n                        className=\"board-clue\">\n                          ${category.clues[j].value}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  renderClue(categoryName, clue, value) {\n    const showDailyDoubleScreen = clue.dailyDouble && !this.state.dailyDoubleScreenPresented;\n    return (\n      <div onClick={showDailyDoubleScreen ? this.switchDDToClue : this.state.solution ? this.backToBoard : this.toggleSolution} className=\"clue\">\n        <div className=\"clue-category-label\">\n          {categoryName} - ${clue.value}\n        </div>\n        <div className={showDailyDoubleScreen ? \"clue-display daily-double\" : \"clue-display\"}>\n            <br/>\n            {showDailyDoubleScreen ? \"Daily Double\" : \n             clue.html === true ? <div dangerouslySetInnerHTML={{ __html: this.state.solution ? clue.solution : clue.clue}} /> :\n             this.state.solution ? clue.solution : clue.clue}\n        </div>\n      </div>\n    )\n  }\n\n  renderCategory(index) {\n    const { board } = this.props;\n    return (\n      <div onClick={this.renderNextCategory} className=\"category-container\">\n        <TransitionGroup>\n          <CSSTransition\n            key={index}\n            timeout={1000}\n            classNames=\"categorybox\"\n          >\n            <div className=\"category-box\">\n              <div className=\"category\">\n                {board[index].category}\n              </div>\n            </div>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n    );\n  }\n\n  clueKeyPress = (event) => {\n    const { board, categoriesShown, currentCategory, currentClue } = this.props;\n\n    // First check for categoriesShown\n    if (categoriesShown < board.length && (event.key === \" \" || event.key === \"Enter\")) {\n      this.props.categoryShown();\n    }\n\n    if (currentCategory === null || currentClue === null) {\n      return;\n    }\n    const clue = board[currentCategory].clues[currentClue];\n\n    if (event.key === \" \" || event.key === \"Enter\") {\n      \n      // If we just showed the Daily Double screen, switch to the clue\n      if (clue.dailyDouble && !this.state.dailyDoubleScreenPresented) {\n        this.switchDDToClue();\n      } else {\n        this.toggleSolution();\n      }\n\n    } else if (event.key === \"Escape\") {\n      this.backToBoard();\n    }\n  }\n\n  renderNextCategory = () => {\n    this.props.categoryShown();\n  }\n\n  switchDDToClue = () => {\n    this.setState({\n      dailyDoubleScreenPresented: true,\n      solution: false\n    });\n  }\n\n  backToBoard = () => {\n    this.setState({\n      solution: false,\n      dailyDoubleScreenPresented: false\n    });\n    this.props.backToBoard();\n  }\n\n  toggleSolution = () => {\n    this.setState(state => ({\n      solution: !state.solution\n    }));\n  }\n\n}\n\nexport default JeopardyBoard;","\nimport React from 'react';\nimport './Scoreboard.css';\n\nclass Scoreboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wagers: props.players.map(() => \"\")\n    }\n  }\n\n  render() {\n    const { players } = this.props;\n    return (\n      <div className=\"scoreboard\">\n        {\n          players.map((player, i) => this.renderPlayer(player, i))\n        }\n      </div>\n    );\n  }\n\n  renderPlayer(player, i) {\n    const { currentValue, wagering } = this.props;\n    const scoreString = player.score >= 0 ? `$${player.score}` : `-$${-player.score}`;\n\n    const clueValue = currentValue === null ? null :\n                      wagering === false ? currentValue :\n                      parseInt(this.state.wagers[i]) || 0;\n    return (\n      <div key={i} className=\"podium\">\n        <div className=\"podium-score\">\n          {scoreString}\n        </div>\n        <div className=\"podium-name\">\n          {player.name}\n        </div>\n        {wagering &&\n          <div>\n            <input\n              className=\"wager-box\"\n              value={this.state.wagers[i]}\n              onChange={(event) => this.changeWager(i, event.target.value)}\n            />\n          </div>\n        }\n        {currentValue !== null && \n          <div>\n            <button\n              onClick={() => this.updateScore(i, -clueValue, false)}\n              className=\"incorrect-answer\">\n              -${clueValue}\n            </button>\n            <button\n              onClick={() => this.updateScore(i, clueValue, true)}\n              className=\"correct-answer\">\n               +${clueValue}\n            </button>\n          </div>\n        }\n        {\n          this.props.stats &&\n          <div className=\"stats\">\n            <hr />\n            <div>Correct: {player.correct}</div>\n            <div>Incorrect: {player.incorrect}</div>\n          </div>\n        }\n      </div>\n    )\n  }\n\n  changeWager = (i, wager) => {\n    this.setState(state => {\n      const wagers = state.wagers;\n      wagers[i] = wager;\n      return {wagers};\n    });\n  }\n\n  updateScore = (i, clueValue, correct) => {\n    this.setState(state => {\n      const wagers = state.wagers;\n      wagers[i] = \"\";\n      return {wagers};\n    })\n    this.props.updateScore(i, clueValue, correct);\n  }\n\n}\n\nexport default Scoreboard;","import React from 'react';\n\nclass FinalJeopardy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: true,\n      solution: false\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.clueKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.clueKeyPress);\n  }\n\n  render() {\n    const { category, solution } = this.state;\n    const { final } = this.props;\n\n    if (category) {\n      return (\n        <div onClick={this.showClue} className=\"clue\">\n          <div className=\"clue-display final-category\">\n            {final.category}\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div onClick={solution ? this.props.finishGame : this.toggleSolution} className=\"clue\">\n        <div className=\"clue-display\">\n          {final.html === true ? <div dangerouslySetInnerHTML={{ __html: solution ? final.solution : final.clue }} /> :\n           solution ? final.solution : final.clue}\n        </div>\n      </div>\n    )\n  }\n\n  clueKeyPress = (event) => {\n    const { category, solution } = this.state;\n\n    if (event.key === \" \" || event.key === \"Enter\") {\n        if (category) {\n          this.showClue();\n        } else {\n          this.toggleSolution();\n        }\n    } else if (event.key === \"Escape\" && !category && solution) {\n      this.props.finishGame();\n    }\n  }\n\n  showClue = () => {\n    this.setState({\n      category: false,\n      solution: false\n    });\n  }\n\n  toggleSolution = () => {\n    this.setState(state => ({\n      solution: !state.solution\n    }));\n  }\n}\n\nexport default FinalJeopardy;","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport './App.css';\n\nimport GameLoader from './GameLoader';\nimport PlayerChooser from './PlayerChooser';\nimport JeopardyBoard from './JeopardyBoard';\nimport Scoreboard from './Scoreboard';\nimport FinalJeopardy from './FinalJeopardy';\n\n\nimport game from './cs51.json';\n\nReactGA.initialize('UA-123778931-2', {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n});\nReactGA.pageview(window.location.pathname + window.location.search);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoriesShown: 0,\n      game: game.game,\n      players: [],\n      playing: false,\n      round: \"single\",\n      currentCategory: null,\n      currentClue: null\n    }\n  }\n\n  render() {\n    if (this.state.game === null) {\n      ReactGA.event({\n        category: 'Navigation',\n        action: 'Show Game Loader'\n      });\n      return (\n        <div className=\"app\">\n          <GameLoader\n            updateGame={this.updateGame}\n          />\n        </div>\n      );\n    } else if (!this.state.playing) {\n      return (\n        <div className=\"app\">\n          <PlayerChooser\n            players={this.state.players}\n            addPlayer={this.addPlayer}\n            playGame={this.playGame}\n          />\n        </div>\n      );\n    } else if (this.state.round === \"single\" || this.state.round === \"double\") {\n      const { categoriesShown, currentCategory, currentClue } = this.state;\n      const board = this.state.game[this.state.round];\n\n      // See if we should be able to proceed to Double Jeopardy\n      let allowProceedToDouble = this.state.round === \"single\";\n      if (allowProceedToDouble) {\n        board.forEach(category => {\n          category.clues.forEach(clue => {\n            if (clue.chosen === undefined) {\n              allowProceedToDouble = false;\n            }\n          })\n        })\n      }\n\n      let allowProceedToFinal = this.state.round === \"double\";\n      if (allowProceedToFinal) {\n        board.forEach(category => {\n          category.clues.forEach(clue => {\n            if (clue.chosen === undefined) {\n              allowProceedToFinal = false;\n            }\n          });\n        });\n      }\n\n      return (\n        <div className=\"app\">\n          {currentCategory === null && currentClue === null && allowProceedToDouble &&\n            <div>\n              <button onClick={this.proceedToDouble} className=\"proceed-to\">\n                Proceed to Double Jeopardy\n              </button>\n            </div>}\n          {currentCategory === null && currentClue === null && allowProceedToFinal &&\n            <div>\n              <button onClick={this.proceedToFinal} className=\"proceed-to\">\n                Proceed to Final Jeopardy\n              </button>\n            </div>}\n\n          <JeopardyBoard\n            board={board}\n            backToBoard={this.backToBoard}\n            categoryShown={this.categoryShown}\n            chooseClue={this.chooseClue}\n            categoriesShown={categoriesShown}\n            currentCategory={currentCategory}\n            currentClue={currentClue}\n          />\n          <Scoreboard\n            players={this.state.players}\n            currentValue={currentCategory !== null && currentClue !== null ? board[currentCategory].clues[currentClue].value : null}\n            updateScore={this.updateScore}\n            wagering={currentCategory !== null && currentClue !== null && board[currentCategory].clues[currentClue].dailyDouble === true}\n            stats={false}\n          />\n          <button onClick={this.downloadGame} className=\"download\">Download Game in Progress</button>\n        </div>\n      )\n    } else if (this.state.round === \"final\") {\n      const final = this.state.game.final;\n      return (\n        <div>\n          <FinalJeopardy\n            final={final}\n            finishGame={this.finishGame}\n          />\n          <Scoreboard\n            players={this.state.players}\n            currentValue={0}\n            updateScore={this.updateScore}\n            wagering={true}\n            stats={false}\n          />\n          <button onClick={this.downloadGame} className=\"download\">Download Game in Progress</button>\n        </div>\n      );\n    } else if (this.state.round === \"done\") {\n      return (\n        <div>\n          <Scoreboard\n            players={this.state.players}\n            currentValue={null}\n            updateScore={this.updateScore}\n            wagering={false}\n            stats={true}\n          />\n          <button onClick={this.downloadGame} className=\"download\">Download Game Result</button>\n        </div>\n      );\n    }\n  }\n\n  addPlayer = (name) => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Add Player',\n      label: name\n    });\n    this.setState(state => ({\n      players: [...state.players, {name: name, score: 0, correct: 0, incorrect: 0}]\n    }));\n  }\n\n  categoryShown = () => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Show Category',\n      label: `${this.state.round}: ${this.state.game[this.state.round][this.state.categoriesShown].name}`\n    });\n    this.setState(state => ({\n      categoriesShown: state.categoriesShown + 1\n    }));\n  }\n\n  chooseClue = (i, j) => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Show Clue',\n      label: `${this.state.round}: ${this.state.game[this.state.round][i].clues[j].clue} (${this.state.game[this.state.round][i].clues[j].solution})`\n    });\n    this.setState(state => {\n      let game = Object.assign({}, state.game);\n      let round = game[state.round];\n      round[i].clues[j].chosen = true;\n      return {\n        game: game,\n        currentCategory: i,\n        currentClue: j\n      };\n    })\n  }\n\n  backToBoard = () => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Back to Board'\n    });\n    this.setState({\n      currentCategory: null,\n      currentClue: null\n    })\n  }\n\n  downloadGame = () => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Download Game',\n      label: this.state.round\n    });\n    const element = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify({\n      game: this.state.game,\n      players: this.state.players,\n      round: this.state.round\n    }, null, 4)], {type: \"text/plain\"});\n    element.href = URL.createObjectURL(file);\n    element.download = \"game.json\";\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  finishGame = () => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Finish Game'\n    });\n    this.setState({\n      round: \"done\"\n    });\n  }\n\n  playGame = () => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Play Game'\n    });\n    this.setState({\n      playing: true\n    })\n  }\n\n  proceedToDouble = () => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Proceed to Double Jeopardy'\n    });\n    this.setState({\n      categoriesShown: 0,\n      round: \"double\"\n    });\n  }\n\n  proceedToFinal = () => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Proceed to Final Jeopardy'\n    });\n    this.setState({\n      round: \"final\"\n    });\n  }\n\n  updateGame = (data) => {\n    const categories = data.game.single.map(c => c.category).concat(data.game.double.map(c => c.category)).concat([data.game.final.category]).join(\" - \").slice(0, 499)\n    ReactGA.event({\n      category: 'Game',\n      action: 'Upload Game',\n      label: categories\n    });\n    this.setState(state => ({\n      game: data.game,\n      players: data.players !== undefined ? data.players : state.players,\n      round: data.round !== undefined ? data.round : state.round,\n      playing: data.players !== undefined\n    }));\n  }\n\n  updateScore = (player, value, correct) => {\n    ReactGA.event({\n      category: 'Game',\n      action: 'Update Score',\n      label: `${player} ${correct ? 'correct' : 'incorrect'} (${value})`\n    });\n    this.setState(state => {\n      const players = [...state.players];\n      players[player].score += value;\n      if (correct)\n        players[player].correct++;\n      else\n        players[player].incorrect++;\n      return {players};\n    });\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Fonts\nimport './fonts/korinna.ttf'\nimport './fonts/Swiss921-BT_43276.ttf'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}