(this.webpackJsonpjeopardy51=this.webpackJsonpjeopardy51||[]).push([[0],[,,,,,,,,,,,,,,,function(e){e.exports=JSON.parse('{"game":{"single":[{"category":"Single Category 1","clues":[{"value":200,"clue":"This is clue 1.1","solution":"What is the solution to clue 1.1?"},{"value":400,"clue":"This is clue 1.2","solution":"What is the solution to clue 1.2?"},{"value":600,"clue":"This is clue 1.3","solution":"What is the solution to clue 1.3?"},{"value":800,"clue":"This is clue 1.4","solution":"What is the solution to clue 1.4?"},{"value":1000,"clue":"This is clue 1.5","solution":"What is the solution to clue 1.5?","dailyDouble":true}]},{"category":"Single Category 2","clues":[{"value":200,"clue":"This is clue 2.1","solution":"What is the solution to clue 2.1?"},{"value":400,"clue":"This is clue 2.2","solution":"What is the solution to clue 2.2?"},{"value":600,"clue":"This is clue 2.3","solution":"What is the solution to clue 2.3?"},{"value":800,"clue":"This is clue 2.4","solution":"What is the solution to clue 2.4?","dailyDouble":true},{"value":1000,"clue":"This is clue 2.5","solution":"What is the solution to clue 2.5?"}]},{"category":"Single Category 3","clues":[{"value":200,"clue":"This is clue 3.1","solution":"What is the solution to clue 3.1?"},{"value":400,"clue":"This is clue 3.2","solution":"What is the solution to clue 3.2?"},{"value":600,"clue":"This is clue 3.3","solution":"What is the solution to clue 3.3?"},{"value":800,"clue":"This is clue 3.4","solution":"What is the solution to clue 3.4?"},{"value":1000,"clue":"This is clue 3.5","solution":"What is the solution to clue 3.5?"}]},{"category":"Single Category 4","clues":[{"value":200,"clue":"This is clue 4.1","solution":"What is the solution to clue 4.1?"},{"value":400,"clue":"This is clue 4.2","solution":"What is the solution to clue 4.2?"},{"value":600,"clue":"This is clue 4.3","solution":"What is the solution to clue 4.3?"},{"value":800,"clue":"This is clue 4.4","solution":"What is the solution to clue 4.4?"},{"value":1000,"clue":"This is clue 4.5","solution":"What is the solution to clue 4.5?"}]},{"category":"Single Category 5","clues":[{"value":200,"clue":"This is clue 5.1","solution":"What is the solution to clue 5.1?"},{"value":400,"clue":"This is clue 5.2","solution":"What is the solution to clue 5.2?"},{"value":600,"clue":"This is clue 5.3","solution":"What is the solution to clue 5.3?"},{"value":800,"clue":"This is clue 5.4","solution":"What is the solution to clue 5.4?"},{"value":1000,"clue":"This is clue 5.5","solution":"What is the solution to clue 5.5?"}]},{"category":"Single Category 6","clues":[{"value":200,"clue":"This is clue 6.1","solution":"What is the solution to clue 6.1?"},{"value":400,"clue":"This is clue 6.2","solution":"What is the solution to clue 6.2?"},{"value":600,"clue":"This is clue 6.3","solution":"What is the solution to clue 6.3?"},{"value":800,"clue":"This is clue 6.4","solution":"What is the solution to clue 6.4?"},{"value":1000,"clue":"This is clue 6.5","solution":"What is the solution to clue 6.5?"}]}],"double":[{"category":"Double Category 1","clues":[{"value":400,"clue":"This is DJ clue 1.1","solution":"What is the solution to DJ clue 1.1?"},{"value":800,"clue":"This is DJ clue 1.2","solution":"What is the solution to DJ clue 1.2?"},{"value":1200,"clue":"This is DJ clue 1.3","solution":"What is the solution to DJ clue 1.3?"},{"value":1600,"clue":"This is DJ clue 1.4","solution":"What is the solution to DJ clue 1.4?"},{"value":2000,"clue":"This is DJ clue 1.5","solution":"What is the solution to DJ clue 1.5?"}]},{"category":"Double Category 2","clues":[{"value":400,"clue":"This is DJ clue 2.1","solution":"What is the solution to DJ clue 2.1?"},{"value":800,"clue":"This is DJ clue 2.2","solution":"What is the solution to DJ clue 2.2?"},{"value":1200,"clue":"This is DJ clue 2.3","solution":"What is the solution to DJ clue 2.3?"},{"value":1600,"clue":"This is DJ clue 2.4","solution":"What is the solution to DJ clue 2.4?"},{"value":2000,"clue":"This is DJ clue 2.5","solution":"What is the solution to DJ clue 2.5?"}]},{"category":"Double Category 3","clues":[{"value":400,"clue":"This is DJ clue 3.1","solution":"What is the solution to DJ clue 3.1?"},{"value":800,"clue":"This is DJ clue 3.2","solution":"What is the solution to DJ clue 3.2?"},{"value":1200,"clue":"This is DJ clue 3.3","solution":"What is the solution to DJ clue 3.3?","dailyDouble":true},{"value":1600,"clue":"This is DJ clue 3.4","solution":"What is the solution to DJ clue 3.4?"},{"value":2000,"clue":"This is DJ clue 3.5","solution":"What is the solution to DJ clue 3.5?"}]},{"category":"Double Category 4","clues":[{"value":400,"clue":"This is DJ clue 4.1","solution":"What is the solution to DJ clue 4.1?"},{"value":800,"clue":"This is DJ clue 4.2","solution":"What is the solution to DJ clue 4.2?"},{"value":1200,"clue":"This is DJ clue 4.3","solution":"What is the solution to DJ clue 4.3?"},{"value":1600,"clue":"This is DJ clue 4.4","solution":"What is the solution to DJ clue 4.4?"},{"value":2000,"clue":"This is DJ clue 4.5","solution":"What is the solution to DJ clue 4.5?"}]},{"category":"Double Category 5","clues":[{"value":400,"clue":"This is DJ clue 5.1","solution":"What is the solution to DJ clue 5.1?"},{"value":800,"clue":"This is DJ clue 5.2","solution":"What is the solution to DJ clue 5.2?"},{"value":1200,"clue":"This is DJ clue 5.3","solution":"What is the solution to DJ clue 5.3?"},{"value":1600,"clue":"This is DJ clue 5.4","solution":"What is the solution to DJ clue 5.4?"},{"value":2000,"clue":"This is DJ clue 5.5","solution":"What is the solution to DJ clue 5.5?"}]},{"category":"Double Category 6","clues":[{"value":400,"clue":"This is DJ clue 6.1","solution":"What is the solution to DJ clue 6.1?"},{"value":800,"clue":"This is DJ clue 6.2","solution":"What is the solution to DJ clue 6.2?"},{"value":1200,"clue":"This is DJ clue 6.3","solution":"What is the solution to DJ clue 6.3?"},{"value":1600,"clue":"This is DJ clue 6.4","solution":"What is the solution to DJ clue 6.4?"},{"value":2000,"clue":"This is DJ clue 6.5","solution":"What is the solution to DJ clue 6.5?"}]}],"final":{"category":"Final Category","clue":"This is the Final Jeopardy clue.","solution":"What is the solution to the Final Jeopardy clue?"}}}')},function(e){e.exports=JSON.parse('{"game":{"single":[{"category":"Compute the Value","clues":[{"value":200,"html":true,"clue":"<ul class=\'code-lines\'><li>let f x = x + 1 in</li><li>f (f 8) ;;</li></ul>","solution":"What is <span class=\'code\'>10</span>?"},{"value":400,"html":true,"clue":"<ul class=\'code-lines\'><li>let lst = [1; 2; 3; 4] in</li><li>match lst with</li><li>| [] -> lst</li><li>| hd :: tl -> tl ;;</li></ul>","solution":"What is <span class=\'code\'>[2; 3; 4]</span>?"},{"value":600,"html":true,"clue":"<ul class=\'code-lines\'><li>let f x y = x + y in</li><li>let g = f 20 in</li><li>g 8 ;;</li></ul>","solution":"What is <span class=\'code\'>28</span>?"},{"value":800,"html":true,"clue":"<ul class=\'code-lines\'><li>let f x y z = y x in</li><li>f 3 ((+) 4) ((+) 5) ;;</li></ul>","solution":"What is <span class=\'code\'>7</span>?"},{"value":1000,"html":true,"clue":"<ul class=\'code-lines\'><li>let x = 2 in</li><li>let y = 3 in</li><li>let f x y = x in</li><li>f y x ;;</li></ul>","solution":"What is <span class=\'code\'>3</span>?"}]},{"category":"Lists","clues":[{"value":200,"html":true,"clue":"The two parts of a non-empty list.","solution":"What are head and tail?"},{"value":400,"html":true,"clue":"In the expression <span class=\'code\'>x :: y</span>, if <span class=\'code\'>x</span> is a <span class=\'code\'>float</span>, then this must be type for <span class=\'code\'>y</span>.","solution":"What is <span class=\'code\'>float list</span>?"},{"value":600,"html":true,"clue":"The type of the following list. <div class=\'code\'>[Some (2, 8); None; Some (5, 1)]</div>","solution":"What is <span class=\'code\'>(int * int) option list</span>?"},{"value":800,"html":true,"dailyDouble":true,"clue":"The type of <span class=\'code\'>List.length</span>","solution":"What is <span class=\'code\'>\'a list -> int</span>?"},{"value":1000,"html":true,"clue":"The type of <span class=\'code\'>List.map</span>","solution":"What is <span class=\'code\'>(\'a -> \'b) -> \'a list -> \'b list</span>?"}]},{"category":"Type Inference","clues":[{"value":200,"html":true,"clue":"<span class=\'code\'>3.0 -. 2.0</span>","solution":"What is <span class=\'code\'>float</span>?"},{"value":400,"html":true,"clue":"<span class=\'code\'>fun (x, y) -> x + y</span>","solution":"What is <span class=\'code\'>int * int -> int</span>?"},{"value":600,"html":true,"clue":"<span class=\'code\'>fun x -> x :: [x]</span>","solution":"What is <span class=\'code\'>\'a -> \'a list</span>?"},{"value":800,"html":true,"clue":"<span class=\'code\'>(fun x y -> x * y) 2</span>","solution":"What is <span class=\'code\'>int -> int</span>?"},{"value":1000,"html":true,"clue":"<span class=\'code\'>List.filter (fun x -> x > 0)</span>","solution":"What is <span class=\'code\'>int list -> int list</span>?"}]},{"category":"Define a Type","clues":[{"value":200,"html":true,"clue":"An ADT <span class=\'code\'>season</span> for representing one of the four seasons.","solution":"What is <span class=\'code\'>type season = Spring | Summer | Fall | Winter</span>?"},{"value":400,"html":true,"clue":"A type <span class=\'code\'>time</span> for representing the current time (in hours and minutes).","solution":"What is <span class=\'code\'>type time = {hour: int; minute: int}</span>?"},{"value":600,"html":true,"clue":"A type <span class=\'code\'>shape</span> for representing either a circle with a radius or a rectangle with a width and height.","solution":"What is <ul class=\'code-lines\'><li>type shape =</li><li>| Circle of int</li><li>| Rectangle of int * int</li></ul>?"},{"value":800,"html":true,"clue":"A type <span class=\'code\'>number</span> for representing either an integer or a floating point number.","solution":"What is <ul class=\'code-lines\'><li>type number =</li><li>| Int of int</li><li>| Float of float</li></ul>?"},{"value":1000,"html":true,"clue":"A type <span class=\'code\'>vote</span> for representing a vote in an election for Candidate A, Candidate B, or a write-in that could be any name.","solution":"What is <ul class=\'code-lines\'><li>type vote =</li><li>| CandidateA</li><li>| CandidateB</li><li>| WriteIn of string</li></ul>?"}]},{"category":"Crossword Clues P","clues":[{"value":200,"html":true,"clue":"11 letters. A type of function that can take arguments of multiple different types.","solution":"What is polymorphic?"},{"value":400,"html":true,"clue":"4 letters. A way to describe a function with no side effects.","solution":"What is pure?"},{"value":600,"html":true,"clue":"Two words: 7 and 11 letters. Using a curried function on only some of its arguments, rather than all.","solution":"What is partial application?"},{"value":800,"html":true,"clue":"Two words: 9 and 12 letters. According to Donald Knuth, it is the root of all evil.","solution":"What is premature optimization?"},{"value":1000,"html":true,"clue":"10 letters. The edict of this says that illegal structures should be inexpressible. Modular programming can help us to achieve it.","solution":"What is prevention?"}]},{"category":"Find the Bug","clues":[{"value":200,"html":true,"clue":"<ul class=\'code-lines\'><li>let f x y = x + y in</li><li>f 1.2 3.4 ;;</li></ul>","solution":"What is using <span class=\'code\'>+</span> instead of <span class=\'code\'>+.</span>?"},{"value":400,"html":true,"clue":"<ul class=\'code-lines\'><li>let length lst =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match lst with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| [] -> 0</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| hd :: tl -> 1 + length tl</li><li>;;</li></ul>","solution":"What is a missing <span class=\'code\'>rec</span>?"},{"value":600,"html":true,"clue":"<ul class=\'code-lines\'><li>let rec sum lst =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match lst with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| [] -> 0</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| hd :: tl -> hd + sum lst</li></ul>","solution":"What is recursively calling on <span class=\'code\'>lst</span> instead of <span class=\'code\'>tl</span>?"},{"value":800,"html":true,"clue":"<ul class=\'code-lines\'><li>List.filter (fun x -> x * 2) [1; 2; 3; 4; 5]</li></ul>","solution":"What is using a filter function that does not return a <span class=\'code\'>bool</span>?"},{"value":1000,"html":true,"clue":"<ul class=\'code-lines\'><li>let rec max_list lst =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match lst with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| [] -> None</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| hd :: tl -> Some (max hd (max_list tl)) ;;</li></ul>","solution":"What is comparing a <span class=\'code\'>\'a</span> with a <span class=\'code\'>\'a option</span>?"}]}],"double":[{"category":"Find the Warning","clues":[{"value":400,"html":true,"clue":"<ul class=\'code-lines\'><li>let fst pair =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match pair with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| x, y -> x</li><li>;;</li></ul>","solution":"What is unused variable?"},{"value":800,"html":true,"clue":"<ul class=\'code-lines\'><li>let rec reverse (x, y) =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;(y, x)</li><li>;;</li></ul>","solution":"What is unused <span class=\'code\'>rec</span>?"},{"value":1200,"html":true,"dailyDouble":true,"clue":"<ul class=\'code-lines\'><li>let sum_opt (x : int option) (y : int option) : int option =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match x, y with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| None, None -> None</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| Some x, Some y -> Some x + y</li><li>;;</li><li></li><li></li></ul>","solution":"What is inexhaustive pattern-matching?"},{"value":1600,"html":true,"clue":"<ul class=\'code-lines\'><li>let rec length lst =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match lst with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| [] -> 0</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| _x -> 1</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| _hd :: tl -> 1 + length tl</li><li>;;</li></ul>","solution":"What is unused match case?"},{"value":2000,"html":true,"clue":"<ul class=\'code-lines\'><li>type season = Winter | Spring | Summer | Fall ;;</li><li>let season_number s =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match s with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| Winter -> 0</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| Spring -> 1</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| Summer -> 2</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| _ -> 3</li><li>;;</li></ul>","solution":"What is fragile pattern matching?"}]},{"category":"9 Letter Words","clues":[{"value":400,"html":true,"clue":"This type of function is one without a name.","solution":"What is anonymous?"},{"value":800,"html":true,"clue":"To hide implementation details behind an abstraction barrier, specify one of these for a module.","solution":"What is signature?"},{"value":1200,"html":true,"clue":"A statement you enforce about values in your representation that you can thus assume to be true is called this.","solution":"What is invariant?"},{"value":1600,"html":true,"clue":"Adding explicit typings to your functions can help to satisfy the edict of this.","solution":"What is intention?"},{"value":2000,"html":true,"clue":"To avoid the verbose extraction and reinjection of values into option types, this can also be used for handling anomalous conditions.","solution":"What is exception?"}]},{"category":"Map, Fold, and Filter","clues":[{"value":400,"html":true,"clue":"The type of <span class=\'code\'>List.map (fun x -> x *. x)</span>","solution":"What is <span class=\'code\'>float list -> float list</span>?"},{"value":800,"html":true,"clue":"The value of <span class=\'code\'>List.map (fun x -> x > 10) [5; 10; 15]</span>","solution":"What is <span class=\'code\'>[false; false; true]</span>?"},{"value":1200,"html":true,"clue":"THe value of the following expression. <ul class=\'code-lines\'><li>[(3, 2); (5, 1); (1, 9)]</li><li>|> List.filter (fun (x, y) -> x > y)</li><li>|> List.length</li></ul>","solution":"What is <span class=\'code\'>2</span>?"},{"value":1600,"html":true,"clue":"The value of the following expression. <ul class=\'code-lines\'><li>[1; 2; 3; 4; 5]</li><li>|> List.filter (fun x -> x > 2)</li><li>|> List.fold_left (+) 0</li></ul>","solution":"What is <span class=\'code\'>12</span>?"},{"value":2000,"html":true,"clue":"The value of the following expression. <ul class=\'code-lines\'><li>List.fold_left</li><li>&nbsp;&nbsp;&nbsp;&nbsp;(fun x y -> x ^ y ^ y)</li><li>&nbsp;&nbsp;&nbsp;&nbsp;\\"\\"</li><li>&nbsp;&nbsp;&nbsp;&nbsp;[\\"a\\"; \\"b\\"; \\"c\\"; \\"d\\"; \\"e\\"]</li></ul>","solution":"What is <span class=\'code\'>\\"aabbccddee\\"</span>?"}]},{"category":"Write the Function","clues":[{"value":400,"html":true,"clue":"A function that takes an integer and returns the integer 51 greater than it.","solution":"What is <span class=\'code\'>(+) 51</span>?"},{"value":800,"html":true,"clue":"A recursive function to compute the factorial of a non-negative integer.","solution":"What is <ul class=\'code-lines\'><li>let rec f x =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;if x = 0 then 1</li><li>&nbsp;&nbsp;&nbsp;&nbsp;else x * f (x - 1)</li><li>;;</li></ul>?"},{"value":1200,"html":true,"clue":"A function that optionally returns the head of a list if the list has a head. The function returns <span class=\'code\'>None</span> if the list has no head.","solution":"What is <ul class=\'code-lines\'><li>let f lst =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match lst with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| [] -> None</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| hd :: _tl -> Some hd</li><li>;;</li></ul>?"},{"value":1600,"html":true,"dailyDouble":true,"clue":"Without using the list module, a function that accepts a list of integers and returns a list of integers with each element incremented by 1.","solution":"What is <ul class=\'code-lines\'><li>let rec f lst =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match lst with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| [] -> []</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| hd :: tl -> (hd + 1) :: f tl</li><li>;;</li></ul>?"},{"value":2000,"html":true,"clue":"Using a single call to a <span class=\'code\'>List</span> module function, a function that accepts a list of integers and returns the list reversed.","solution":"What is <span class=\'code\'>List.fold_left (fun acc elt -> elt :: acc) []</span>?"}]},{"category":"Famous Computer Scientists","clues":[{"value":400,"html":true,"clue":"Writing functions that take arguments one at a time, instead of taking multiple arguments simultaneously, was popularized by this computer scientist.","solution":"Who is Haskell Curry?"},{"value":800,"html":true,"clue":"Robin Milner developed the ML programming language, the first functional language with this: the ability to automatically detect the data type of a programming expression.","solution":"What is type inference?"},{"value":1200,"html":true,"clue":"Turing Award winner Barbara Liskov is known for her work with hiding the implementation of an abstract data type\'s functionality behind what\'s commonly known as this -- don\'t cross it!","solution":"What is the abstraction barrier?"},{"value":1600,"html":true,"clue":"Marianne Baudinet is known for her work on this feature of ML-style languages, which allows us to extract the parts from a composite value (especially helpful if the value can take multiple forms).","solution":"What is pattern matching?"},{"value":2000,"html":true,"clue":"Alonzo Church is known for the development of this logical system that includes only functions and their applications, serving as the mathematical precursor to languages like OCaml.","solution":"What is the lambda calculus?"}]},{"category":"Modules","clues":[{"value":400,"html":true,"clue":"The keyword <span class=\'code\'>module</span> is used for introducing the name of a module. The keywords <span class=\'code\'>module type</span> are used to introduce the name of this part of a module.","solution":"What is a module signature?"},{"value":800,"html":true,"clue":"These constructs in OCaml accept modules as arguments, and return new modules.","solution":"What are functors?"},{"value":1200,"html":true,"clue":"Fill in the blank in this module definition. <ul class=\'code-lines\'><li>module Stack =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;struct</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type int_stack = int list</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let empty_stack : int_stack = []</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let push elt s : int_stack = ______</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let pop q : int * int_stack =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match q with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| [] -> raise (Invalid_argument \\"empty\\")</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| hd :: tl -> hd, tl</li><li>&nbsp;&nbsp;&nbsp;&nbsp;end ;;</li></ul>","solution":"What is <span class=\'code\'>elt :: s</span>?"},{"value":1600,"html":true,"clue":"When a module signature enforces an abstraction barrier that is too strict, these can be used to define slightly less abstract signatures.","solution":"What are sharing constraints?"},{"value":2000,"html":true,"clue":"The following function successfully finds the number of elements in an integer stack, but is problematic for this reason. <ul class=\'code-lines\'><li>let rec size (s : int_stack) =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match s with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| [] -> 0</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| hd :: tl -> 1 + size tl ;;</li></ul>","solution":"What is breaking the abstraction barrier?"}]}],"final":{"category":"Option Types","html":true,"clue":"The type of the following function. <ul class=\'code-lines\'><li>let f x =</li><li>&nbsp;&nbsp;&nbsp;&nbsp;match x with</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| None</li><li>&nbsp;&nbsp;&nbsp;&nbsp;| Some _ -> Some x</li></ul>","solution":"What is <div class=\'code\'>\'a option -> \'a option option</div>?"}}}')},,function(e,t,l){e.exports=l(33)},,,,,function(e,t,l){},,,function(e,t,l){},function(e,t,l){},function(e,t,l){},function(e,t,l){},function(e,t,l){},function(e,t,l){e.exports=l.p+"static/media/korinna.64dc7745.ttf"},function(e,t,l){e.exports=l.p+"static/media/Swiss921-BT_43276.6433bfa5.ttf"},function(e,t,l){"use strict";l.r(t);var s=l(0),n=l.n(s),a=l(11),i=l.n(a),o=(l(23),l(13)),u=l(2),c=l(3),r=l(5),h=l(4),p=l(6),d=l(1),m=(l(26),l(27),l(15));var b=function(e){function t(){var e,l;Object(u.a)(this,t);for(var s=arguments.length,n=new Array(s),a=0;a<s;a++)n[a]=arguments[a];return(l=Object(r.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(n)))).gameLoadedHandler=function(e){e.target.files[0].text().then((function(e){var t=JSON.parse(e);!function(e){return void 0!==e.game||(console.log("Game key not found in JSON payload."),!1)}(t)?console.log("Invalid game."):l.props.updateGame(t)}))},l.downloadSampleGame=function(){var e=document.createElement("a"),t=new Blob([JSON.stringify(m,null,4)],{type:"text/plain"});e.href=URL.createObjectURL(t),e.download="sample_game.json",document.body.appendChild(e),e.click()},l}return Object(p.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return n.a.createElement("div",{className:"game-loader"},n.a.createElement("h1",null,"Jeopardy Player"),n.a.createElement("p",null,"Designed by Brian Yu"),n.a.createElement("hr",null),n.a.createElement("h2",null,"Play a Game"),n.a.createElement("input",{type:"file",name:"file",onChange:this.gameLoadedHandler}),n.a.createElement("hr",null),n.a.createElement("h2",null,"Create a Game"),n.a.createElement("div",{className:"create-your-own"},"To create a Jeopardy game, download the below game configuration file, edit it to include your desired clues, and re-upload it here.",n.a.createElement("div",null,n.a.createElement("button",{onClick:this.downloadSampleGame},"Download Configuration"))))}}]),t}(n.a.Component),y=(l(28),function(e){function t(e){var l;return Object(u.a)(this,t),(l=Object(r.a)(this,Object(h.a)(t).call(this,e))).addPlayer=function(){l.props.addPlayer(l.state.input),l.setState({input:""})},l.handlePlayGame=function(e){l.props.playGame()},l.handleKeyPress=function(e){"Enter"===e.key&&l.addPlayer()},l.inputHandler=function(e){l.setState({input:e.target.value})},l.state={input:""},l}return Object(p.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return n.a.createElement("div",{className:"player-chooser"},n.a.createElement("div",null,n.a.createElement("h1",null,"Players"),n.a.createElement("ul",null,this.props.players.map((function(e,t){return n.a.createElement("li",{key:t},e.name)})))),n.a.createElement("div",null,n.a.createElement("input",{value:this.state.input,onKeyPress:this.handleKeyPress,onChange:this.inputHandler,autoFocus:!0,type:"text",placeholder:"Player Name"}),n.a.createElement("button",{className:"add-player-button",onClick:this.addPlayer},"Add Player")),n.a.createElement("div",null,n.a.createElement("button",{className:"play-game-button",onClick:this.handlePlayGame},"Play Game")))}}]),t}(n.a.Component)),g=l(36),f=l(35),v=(l(29),function(e){function t(e){var l;return Object(u.a)(this,t),(l=Object(r.a)(this,Object(h.a)(t).call(this,e))).clueKeyPress=function(e){var t=l.props,s=t.board,n=t.categoriesShown,a=t.currentCategory,i=t.currentClue;if(n<s.length&&(" "===e.key||"Enter"===e.key)&&l.props.categoryShown(),null!==a&&null!==i){var o=s[a].clues[i];" "===e.key||"Enter"===e.key?o.dailyDouble&&!l.state.dailyDoubleScreenPresented?l.switchDDToClue():l.toggleSolution():"Escape"===e.key&&l.backToBoard()}},l.renderNextCategory=function(){l.props.categoryShown()},l.switchDDToClue=function(){l.setState({dailyDoubleScreenPresented:!0,solution:!1})},l.backToBoard=function(){l.setState({solution:!1,dailyDoubleScreenPresented:!1}),l.props.backToBoard()},l.toggleSolution=function(){l.setState((function(e){return{solution:!e.solution}}))},l.state={solution:!1,dailyDoubleScreenPresented:!1},l}return Object(p.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){document.addEventListener("keydown",this.clueKeyPress)}},{key:"componentWillUnmount",value:function(){document.removeEventListener("keydown",this.clueKeyPress)}},{key:"render",value:function(){var e=this,t=this.props,l=t.board,s=t.categoriesShown,a=t.currentCategory,i=t.currentClue;return s<l.length?this.renderCategory(s):null!==a&&null!==i?this.renderClue(l[a].category,l[a].clues[i],l[a].clues[i].value):n.a.createElement("div",null,n.a.createElement("table",null,n.a.createElement("thead",null,n.a.createElement("tr",null,l.map((function(e,t){return n.a.createElement("td",{key:t,className:"category-title"},e.category)})))),n.a.createElement("tbody",null,l[0].clues.map((function(t,s){return n.a.createElement("tr",{key:s},l.map((function(t,l){return t.clues[s].chosen?n.a.createElement("td",{key:l,className:"board-clue"}):n.a.createElement("td",{key:l,onClick:function(){return e.props.chooseClue(l,s)},className:"board-clue"},"$",t.clues[s].value)})))})))))}},{key:"renderClue",value:function(e,t,l){var s=t.dailyDouble&&!this.state.dailyDoubleScreenPresented;return n.a.createElement("div",{onClick:s?this.switchDDToClue:this.state.solution?this.backToBoard:this.toggleSolution,className:"clue"},n.a.createElement("div",{className:"clue-category-label"},e," - $",t.value),n.a.createElement("div",{className:s?"clue-display daily-double":"clue-display"},n.a.createElement("br",null),s?"Daily Double":!0===t.html?n.a.createElement("div",{dangerouslySetInnerHTML:{__html:this.state.solution?t.solution:t.clue}}):this.state.solution?t.solution:t.clue))}},{key:"renderCategory",value:function(e){var t=this.props.board;return n.a.createElement("div",{onClick:this.renderNextCategory,className:"category-container"},n.a.createElement(g.a,null,n.a.createElement(f.a,{key:e,timeout:1e3,classNames:"categorybox"},n.a.createElement("div",{className:"category-box"},n.a.createElement("div",{className:"category"},t[e].category)))))}}]),t}(n.a.Component)),W=(l(30),function(e){function t(e){var l;return Object(u.a)(this,t),(l=Object(r.a)(this,Object(h.a)(t).call(this,e))).changeWager=function(e,t){l.setState((function(l){var s=l.wagers;return s[e]=t,{wagers:s}}))},l.updateScore=function(e,t,s){l.setState((function(t){var l=t.wagers;return l[e]="",{wagers:l}})),l.props.updateScore(e,t,s)},l.state={wagers:e.players.map((function(){return""}))},l}return Object(p.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){var e=this,t=this.props.players;return n.a.createElement("div",{className:"scoreboard"},t.map((function(t,l){return e.renderPlayer(t,l)})))}},{key:"renderPlayer",value:function(e,t){var l=this,s=this.props,a=s.currentValue,i=s.wagering,o=e.score>=0?"$".concat(e.score):"-$".concat(-e.score),u=null===a?null:!1===i?a:parseInt(this.state.wagers[t])||0;return n.a.createElement("div",{key:t,className:"podium"},n.a.createElement("div",{className:"podium-score"},o),n.a.createElement("div",{className:"podium-name"},e.name),i&&n.a.createElement("div",null,n.a.createElement("input",{className:"wager-box",value:this.state.wagers[t],onChange:function(e){return l.changeWager(t,e.target.value)}})),null!==a&&n.a.createElement("div",null,n.a.createElement("button",{onClick:function(){return l.updateScore(t,-u,!1)},className:"incorrect-answer"},"-$",u),n.a.createElement("button",{onClick:function(){return l.updateScore(t,u,!0)},className:"correct-answer"},"+$",u)),this.props.stats&&n.a.createElement("div",{className:"stats"},n.a.createElement("hr",null),n.a.createElement("div",null,"Correct: ",e.correct),n.a.createElement("div",null,"Incorrect: ",e.incorrect)))}}]),t}(n.a.Component)),w=function(e){function t(e){var l;return Object(u.a)(this,t),(l=Object(r.a)(this,Object(h.a)(t).call(this,e))).clueKeyPress=function(e){var t=l.state,s=t.category,n=t.solution;" "===e.key||"Enter"===e.key?s?l.showClue():l.toggleSolution():"Escape"===e.key&&!s&&n&&l.props.finishGame()},l.showClue=function(){l.setState({category:!1,solution:!1})},l.toggleSolution=function(){l.setState((function(e){return{solution:!e.solution}}))},l.state={category:!0,solution:!1},l}return Object(p.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){document.addEventListener("keydown",this.clueKeyPress)}},{key:"componentWillUnmount",value:function(){document.removeEventListener("keydown",this.clueKeyPress)}},{key:"render",value:function(){var e=this.state,t=e.category,l=e.solution,s=this.props.final;return t?n.a.createElement("div",{onClick:this.showClue,className:"clue"},n.a.createElement("div",{className:"clue-display final-category"},s.category)):n.a.createElement("div",{onClick:l?this.props.finishGame:this.toggleSolution,className:"clue"},n.a.createElement("div",{className:"clue-display"},!0===s.html?n.a.createElement("div",{dangerouslySetInnerHTML:{__html:l?s.solution:s.clue}}):l?s.solution:s.clue))}}]),t}(n.a.Component),T=l(16);d.a.initialize("UA-123778931-2",{gaOptions:{siteSpeedSampleRate:100}}),d.a.pageview(window.location.pathname+window.location.search);var D=function(e){function t(e){var l;return Object(u.a)(this,t),(l=Object(r.a)(this,Object(h.a)(t).call(this,e))).addPlayer=function(e){d.a.event({category:"Game",action:"Add Player",label:e}),l.setState((function(t){return{players:[].concat(Object(o.a)(t.players),[{name:e,score:0,correct:0,incorrect:0}])}}))},l.categoryShown=function(){d.a.event({category:"Game",action:"Show Category",label:"".concat(l.state.round,": ").concat(l.state.game[l.state.round][l.state.categoriesShown].name)}),l.setState((function(e){return{categoriesShown:e.categoriesShown+1}}))},l.chooseClue=function(e,t){d.a.event({category:"Game",action:"Show Clue",label:"".concat(l.state.round,": ").concat(l.state.game[l.state.round][e].clues[t].clue," (").concat(l.state.game[l.state.round][e].clues[t].solution,")")}),l.setState((function(l){var s=Object.assign({},l.game);return s[l.round][e].clues[t].chosen=!0,{game:s,currentCategory:e,currentClue:t}}))},l.backToBoard=function(){d.a.event({category:"Game",action:"Back to Board"}),l.setState({currentCategory:null,currentClue:null})},l.downloadGame=function(){d.a.event({category:"Game",action:"Download Game",label:l.state.round});var e=document.createElement("a"),t=new Blob([JSON.stringify({game:l.state.game,players:l.state.players,round:l.state.round},null,4)],{type:"text/plain"});e.href=URL.createObjectURL(t),e.download="game.json",document.body.appendChild(e),e.click()},l.finishGame=function(){d.a.event({category:"Game",action:"Finish Game"}),l.setState({round:"done"})},l.playGame=function(){d.a.event({category:"Game",action:"Play Game"}),l.setState({playing:!0})},l.proceedToDouble=function(){d.a.event({category:"Game",action:"Proceed to Double Jeopardy"}),l.setState({categoriesShown:0,round:"double"})},l.proceedToFinal=function(){d.a.event({category:"Game",action:"Proceed to Final Jeopardy"}),l.setState({round:"final"})},l.updateGame=function(e){var t=e.game.single.map((function(e){return e.category})).concat(e.game.double.map((function(e){return e.category}))).concat([e.game.final.category]).join(" - ").slice(0,499);d.a.event({category:"Game",action:"Upload Game",label:t}),l.setState((function(t){return{game:e.game,players:void 0!==e.players?e.players:t.players,round:void 0!==e.round?e.round:t.round,playing:void 0!==e.players}}))},l.updateScore=function(e,t,s){d.a.event({category:"Game",action:"Update Score",label:"".concat(e," ").concat(s?"correct":"incorrect"," (").concat(t,")")}),l.setState((function(l){var n=Object(o.a)(l.players);return n[e].score+=t,s?n[e].correct++:n[e].incorrect++,{players:n}}))},l.state={categoriesShown:0,game:T.game,players:[],playing:!1,round:"single",currentCategory:null,currentClue:null},l}return Object(p.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){if(null===this.state.game)return d.a.event({category:"Navigation",action:"Show Game Loader"}),n.a.createElement("div",{className:"app"},n.a.createElement(b,{updateGame:this.updateGame}));if(!this.state.playing)return n.a.createElement("div",{className:"app"},n.a.createElement(y,{players:this.state.players,addPlayer:this.addPlayer,playGame:this.playGame}));if("single"===this.state.round||"double"===this.state.round){var e=this.state,t=e.categoriesShown,l=e.currentCategory,s=e.currentClue,a=this.state.game[this.state.round],i="single"===this.state.round;i&&a.forEach((function(e){e.clues.forEach((function(e){void 0===e.chosen&&(i=!1)}))}));var o="double"===this.state.round;return o&&a.forEach((function(e){e.clues.forEach((function(e){void 0===e.chosen&&(o=!1)}))})),n.a.createElement("div",{className:"app"},null===l&&null===s&&i&&n.a.createElement("div",null,n.a.createElement("button",{onClick:this.proceedToDouble,className:"proceed-to"},"Proceed to Double Jeopardy")),null===l&&null===s&&o&&n.a.createElement("div",null,n.a.createElement("button",{onClick:this.proceedToFinal,className:"proceed-to"},"Proceed to Final Jeopardy")),n.a.createElement(v,{board:a,backToBoard:this.backToBoard,categoryShown:this.categoryShown,chooseClue:this.chooseClue,categoriesShown:t,currentCategory:l,currentClue:s}),n.a.createElement(W,{players:this.state.players,currentValue:null!==l&&null!==s?a[l].clues[s].value:null,updateScore:this.updateScore,wagering:null!==l&&null!==s&&!0===a[l].clues[s].dailyDouble,stats:!1}),n.a.createElement("button",{onClick:this.downloadGame,className:"download"},"Download Game in Progress"))}if("final"===this.state.round){var u=this.state.game.final;return n.a.createElement("div",null,n.a.createElement(w,{final:u,finishGame:this.finishGame}),n.a.createElement(W,{players:this.state.players,currentValue:0,updateScore:this.updateScore,wagering:!0,stats:!1}),n.a.createElement("button",{onClick:this.downloadGame,className:"download"},"Download Game in Progress"))}return"done"===this.state.round?n.a.createElement("div",null,n.a.createElement(W,{players:this.state.players,currentValue:null,updateScore:this.updateScore,wagering:!1,stats:!0}),n.a.createElement("button",{onClick:this.downloadGame,className:"download"},"Download Game Result")):void 0}}]),t}(n.a.Component);l(31),l(32);i.a.render(n.a.createElement(D,null),document.getElementById("root"))}],[[18,1,2]]]);
//# sourceMappingURL=main.b0bd23d7.chunk.js.map